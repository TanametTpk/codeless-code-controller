const User = require( "mongoose" ).model( "user" );
const jwt = require('jsonwebtoken');
const jwtConfig = require('../../config/env/jwt.config');

const find = (query , populate) => {

	let result = User.findOne(query)

	if (populate) result = result.populate(populate);
	return result

}

const findManyAndPopulate = (query , populate , skip , limit) => {

	if (!skip) skip = 0
	if (!limit) limit = 1000

	let result = User.find(query).limit(limit).skip(skip * limit);

	if (populate) result = result.populate(populate);
	return result

}

const create = (data) => {

	const user = new User(data);
	user.setPassword(data.password)

	return user.save();

};

const update = ( user, data ) => {

	const { name,email,password,provider_token } = data;
	const current = user;

    if (name) current.name = name
    if (email) current.email = email
    if (password) current.setPassword(data.password)
    if (provider_token) current.provider_token = provider_token


	return user.save();

};

const deleteObj = ( user ) => user.deleteOne();

const wrap = (user) => {

	if (user === null) return {};
	const { _id , name,email,provider_type,provider_token } = user;

	return { _id , name,email,provider_type,provider_token };

}

const createJWT = (data) => {

    return jwt.sign(data , jwtConfig.jwt_secret)

}

const validatePassword = (user , password) => {

	if (user === null) return null;
	if ( !user.validatePassword(password) ) return null;

	const { _id , name,email } = user;
	let auth = { _id , name,email };

	return createJWT(auth);

}


module.exports = {
	find,
	findManyAndPopulate,
	create,
	update,
	deleteObj,
	wrap,
	validatePassword
};
